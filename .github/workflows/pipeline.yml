name: Deploy Serverless API

on:
  push:
    branches:
      - main
      - 'release/*'
  workflow_dispatch:

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'prod' || github.event_name == 'push' && startsWith(github.ref, 'refs/heads/release/') && 'hml' || 'dev' }}
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i
      - name: Create env file
        run: |
          touch .env
          echo ENVIRONMENT=${ENVIRONMENT} >> .env
          echo DB_HOST=${DB_HOST} >> .env
          echo DB_PORT=${DB_PORT} >> .env
          echo DB_USERNAME=${DB_USERNAME} >> .env
          echo DB_PASSWORD=${DB_PASSWORD} >> .env
          echo DB_NAME=${DB_NAME} >> .env
          cat .env
        env: 
          ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
      - name: Install Plugins and Deploy
        uses: serverless/github-action@v3.2
        with:
          args: -c "serverless plugin install -n serverless-plugin-typescript && serverless plugin install -n serverless-offline && serverless plugin install -n serverless-dotenv-plugin && serverless deploy --stage=${{ matrix.stages.stage }} --verbose"
          entrypoint: /bin/bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TST:  ${{ env.TST }}
